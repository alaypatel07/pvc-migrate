---
- hosts: localhost
  vars_files:
    - vars/run-rsync.yml
    - vars/defaults.yml
  tasks:
    - name: "Verify required variables are defined"
      assert:
        that:
          - pvc_data_filepath is defined

    - block:
      - name: "Ensure pvc data file exists"
        stat:
          path: "{{ pvc_data_filepath }}"
        register: p

      - fail:
          msg: "PVC data file from Stage 1 does not exist..."
        when: p.stat.exists == False

      - set_fact:
          pvc_data: "{{ lookup('file', pvc_data_filepath) | from_json }}"
          namespace_data: "{{ lookup('file', namespace_data_filepath) | from_json }}"

    - block:
      - name: "Generating temp files for keys"
        tempfile:
          state: file
          suffix: "{{ item }}"
        register: temp_files
        loop:
        - 'pem'
        - 'csr'
        - 'crt'

      - name: "Generating new key"
        openssl_privatekey:
          size: 2048
          path: "{{ temp_files.results[0].path }}"

      - name: "Generating csr"
        openssl_csr:
          path: "{{ temp_files.results[1].path }}"
          privatekey_path: "{{ temp_files.results[0].path }}"
          country_name: US
          state_or_province_name: NC
          organization_name: Migration Engineering
          common_name: openshift.io
          locality_name: RDU

      - name: "Generating certificate"
        openssl_certificate:
          path: "{{ temp_files.results[2].path }}"
          privatekey_path: "{{ temp_files.results[0].path }}"
          csr_path: "{{ temp_files.results[1].path }}"
          provider: selfsigned

      - copy:
          src: "{{ item.src }}"
          dest: "{{ item.dst }}"
        loop:
          - src: "{{ temp_files.results[0].path }}"
            dst: "./scripts/tls.key"
          - src: "{{ temp_files.results[2].path }}"
            dst: "./scripts/tls.crt"
      rescue:
        - name: "Deleting temp files" 
          file:
            path: "{{ item.path }}"
            state: absent
          loop: "{{ temp_files.results }}"
        - fail:
            msg: "Failed creating certs"

    - name: "Create pod and service"
      vars:
        pvc_namespace: "{{ item.namespace }}"
        pod_name: "{{ pvc_namespace }}-rsync"
        svc_name: "{{ pvc_namespace }}-rsync"
        route_name: "{{ pvc_namespace }}-rsync"
        pvcs: "{{ item.pvcs }}"
      include_tasks: "tasks/create-pod-service.yml"
      with_items: "{{ pvc_data }}"
