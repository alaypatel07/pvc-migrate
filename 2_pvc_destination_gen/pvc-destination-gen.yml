---
- hosts: localhost
  vars_files:
    - vars/defaults.yml
    - vars/storage-class-mappings.yml
  tasks:
    - import_tasks: ../common/assert-kubeconfig.yml
 
    - name: Verify required variables are defined
      assert:
        that:
          - pvc_data_filepath is defined

    # -------
    - block:
        - name: Ensure pvc data file exists
          stat:
            path: "{{ pvc_data_filepath }}"
          register: p

        - debug: msg="PVC json file exists..."
          when: p.stat.exists

        - fail:
          when: p.stat.exists == False

        - name: Ensure namespace data file exists
          stat:
            path: "{{ namespace_data_filepath }}"
          register: n

        - debug: msg="Namespace json file exists..."
          when: n.stat.exists

        - fail:
          when: not n.stat.exists

        - name: "Get list of user provided destination storage-classes"
          set_fact:
            user_storage_classes: "{{ mig_storage_class_mappings.values() | list | unique }}"

        - name: "Get list of available storage classes"
          k8s_info:
            api_version: storage.k8s.io/v1
            kind: StorageClass
          register: storage_classes

        - name: "Create list of storage classes available"
          vars:
            available_storage_classes: []
          set_fact:
            available_storage_classes: "{{ available_storage_classes + [item.metadata.name] }}"
          loop: "{{ storage_classes.resources }}"

        - fail:
          when: "{{ (user_storage_classes | difference(available_storage_classes)) | length > 0 }}"

        - set_fact:
            pvc_data: "{{ lookup('file', pvc_data_filepath) | from_json }}"
            namespace_data: "{{ lookup('file', namespace_data_filepath) | from_json }}"


    - name: "Ensure the namespaces are created for the pvcs"
      k8s:
        state: present
        definition: "{{ lookup('template', 'namespace.yml.j2') }}"
      loop: "{{ namespace_data }}"

    - name: "Create pvcs on destination namespace"
      vars:
        pvcs: "{{ item.pvcs }}"
      include_tasks: "tasks/convert_and_create.yml"
      loop: "{{ pvc_data }}"

