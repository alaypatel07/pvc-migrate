---
- hosts: localhost
  vars_files:
   - vars/pvc-data-gen.yml
  tasks:
  - name: Verify required variables are defined
    assert:
      that:
        - namespaces_to_migrate is defined

# -------
# Write namespace-data.json with with namespaces and annotations
  - block:

    - name: Ensure output directory exists
      file:
        path: output
        state: directory

    - name: Read namespace resources
      k8s_info:
        kind: Namespace
        name: "{{ item }}"
        validate_certs: False
      with_items: "{{ namespaces_to_migrate }}"
      register: namespace_resources

    - name: Render namespaces to output/namespace-data.json
      template:
        src: namespace-data.json.j2
        dest: output/namespace-data.json      

# -------
# Write pvc-data.json with immediately accessible PVC data
  - block:

    - name: Ensure output directory exists
      file:
        path: output
        state: directory

    - name: Remove existing migration_pvcs.json
      file:
        path: output/migration_pvcs.json
        state: absent

    - name: Read PVCs associated with namespaces
      k8s_info:
        kind: PersistentVolumeClaim
        namespace: "{{ item }}"
        validate_certs: False
      with_items: "{{ namespaces_to_migrate }}"
      register: namespaced_pvcs

    - name: Render PVCs to output/pvc-data.json
      template:
        src: pvc-data.json.j2
        dest: output/pvc-data.json   

# -------
# Write pvc-data.json with with addition of bound_pod_uid and bound_pod_name
# /var/lib/origin/openshift.local.volumes/pods/<pod-UID>/volumes/kubernetes.io~glusterfs/<pvc-name>/
# Requirements:
#  - pod_UID (need pod UID associated with PVC)
#  - pvc_name (we have this)

# Build a mapping so we can do lookup given any PVC ns/name to any pod name
# Easier to do this in Python.
    - name: Read Pods associated with namespaces
      k8s_info:
        kind: Pod
        namespace: "{{ item }}"
        validate_certs: False
      with_items: "{{ namespaces_to_migrate }}"
      register: namespaced_pods

    - name: Render known Pod/PVC info to JSON
      template:
        src: pods-and-pvcs.json.j2
        dest: output/pods-and-pvcs.json   
    
    - name: Run add_pod_info_to_pvc.py to add bound Pod info to PVC list
      shell: python scripts/add_pod_info_to_pvc.py

    


      



