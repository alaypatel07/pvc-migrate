#  Input :
#    mig_dest_service_url : SSH Tunnel endpoint on destination
#    mig_source_data_location : Mount point on source side
#    mig_dest_data_location : Mount point on destination side
#    mig_source_host : IP address to connect to
#
#  Output : 
#    zero     :  if successful transfer 
#    non-zero :  if unsuccessful transfer

- hosts: "{{ mig_source_host }}"
  tasks:
  - name: "Ensure .ssh dir"
    file:
      path: "~/.ssh/"
      state: directory

  - name: "Copying private key to source"
    copy:
      src: "{{ mig_source_ssh_key }}"
      dest: "~/.ssh/id.github"
      mode: "0600"
    
  - name: "Running transfer"
    shell: "rsync -aPvv {{ mig_source_data_location }} -e 'ssh -o StrictHostKeyChecking=no -i ~/.ssh/id.github' root@{{ mig_dest_service_url }}:{{ mig_dest_data_location }}"

  - name: "Removing private key from source"
    file:
      state: absent
      path: /root/.ssh/id.github

#  - name: "Transferring data from source to destination"
#    synchronize:
#      src: "{{ mig_source_data_location | mandatory }}"
#      dest: "rsync://{{ mig_dest_service_url | mandatory }}{{ mig_dest_data_location | mandatory }}"
#      archive: yes
#      verify_host: false
#      mode: push
#      private_key: "/home/pranav/.ssh/id.github"
#    delegate_to: "{{ mig_source_host | mandatory }}"
#    remote_user: root
#    register: mig_transfer_status
